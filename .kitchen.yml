---
driver:
  name: vagrant

provisioner:
  name: salt_solo
  log_level: debug
  require_chef: false
  formula: docker
  state_top:
    base:
      '*':
        - docker

platforms:
  - name: bento/debian-8.9
  - name: bento/debian-9.2

suites:
  - name: version-17.09
    provisioner:
      pillars:
        top.sls:
          base:
            '*':
              - docker
        docker.sls:
          docker:
            lookup:
              version: 17.09.1~ce-0~debian
              repo_name: http://mirror-ka.i.fhe3.net/docker/debian/
              repo_keyurl: http://mirror-ka.i.fhe3.net/docker/debian/gpg
              repo_component: stable
              daemon:
                bip: "10.99.0.1/16"
                fixed-cidr: "10.99.1.0/24"
                hosts:
                  - "fd://"
                  - "{{ salt['grains.get']('fqdn') }}"
                tls: false
  - name: container
    provisioner:
      state_top:
        base:
          '*':
            - docker
            - docker.containers
      pillars:
        top.sls:
          base:
            '*':
              - docker
        docker.sls:
          docker:
            lookup:
              version: 17.09.1~ce-0~debian
              repo_name: http://mirror-ka.i.fhe3.net/docker/debian/
              repo_keyurl: http://mirror-ka.i.fhe3.net/docker/debian/gpg
              repo_component: stable
              daemon:
                bip: "10.99.0.1/16"
                fixed-cidr: "10.99.1.0/24"
                hosts:
                  - "fd://"
                  - "{{ salt['grains.get']('fqdn') }}"
                tls: false
          docker-containers:
            lookup:
              helloworld:
                image: "dockercloud/hello-world"
                cmd:
                runoptions:
                  - "-p 5000:80"
  - name: compose
    provisioner:
      state_top:
        base:
          '*':
            - docker
            - docker.compose-ng
      pillars:
        top.sls:
          base:
            '*':
              - docker
        docker.sls:
          docker:
            lookup:
              version: 17.09.1~ce-0~debian
              repo_name: http://mirror-ka.i.fhe3.net/docker/debian/
              repo_keyurl: http://mirror-ka.i.fhe3.net/docker/debian/gpg
              repo_component: stable
              install_docker_py: True
              daemon:
                bip: "10.99.0.1/16"
                fixed-cidr: "10.99.1.0/24"
                hosts:
                  - "fd://"
                  - "{{ salt['grains.get']('fqdn') }}"
                tls: false
            compose:
              netbox:
                image: ninech/netbox:latest
                depends_on:
                  - postgres
                environment:
                  SUPERUSER_NAME: admin
                  SUPERUSER_EMAIL: admin@example.com
                  SUPERUSER_PASSWORD: admin
                  ALLOWED_HOSTS: localhost 0.0.0.0 127.0.0.1 [::1] netbox
                  DB_NAME: netbox
                  DB_USER: netbox
                  DB_PASSWORD: J5brHrAXFLQSif0K
                  DB_HOST: postgres
                  SECRET_KEY: r8OwDznj!!dci#P9ghmRfdu1Ysxm0AiPeDCQhKE+N_rClfWNj
                  EMAIL_SERVER: localhost
                  EMAIL_PORT: 25
                  EMAIL_USERNAME: foo
                  EMAIL_PASSWORD: bar
                  EMAIL_TIMEOUT: 10
                  EMAIL_FROM: netbox@bar.com
                  NETBOX_USERNAME: guest
                  NETBOX_PASSWORD: guest
                binds:
                  - netbox-nginx-config:/etc/netbox-nginx/
                  - netbox-static-files:/opt/netbox/netbox/static
                  - netbox-netbox-data:/opt/netbox/netbox/media
                links:
                  - postgres:postgres
              nginx:
                restart: always
                image: nginx:1.11-alpine
                command: nginx -g 'daemon off;' -c /etc/netbox-nginx/nginx.conf
                depends_on:
                  - netbox
                port_bindings:
                  - 80:80
                binds:
                  - netbox-static-files:/opt/netbox/netbox/static
                  - netbox-nginx-config:/etc/netbox-nginx/
                links:
                  - netbox:netbox
              postgres:
                image: postgres:9.6-alpine
                environment:
                  POSTGRES_USER: netbox
                  POSTGRES_PASSWORD: J5brHrAXFLQSif0K
                  POSTGRES_DB: netbox
                binds:
                  - netbox-postgres-data:/var/lib/postgresql/data
            volumes:
              netbox-static-files: 
                driver: local
              netbox-nginx-config:
                driver: local
              netbox-postgres-data:
                driver: local
              netbox-netbox-data:
                driver: local

verifier:
  name: shell
  remote_exec: false
  command: pytest -vvv --connection=docker --hosts=root@$KITCHEN_CONTAINER_ID --junit-xml junit-$KITCHEN_INSTANCE.xml test/integration/$KITCHEN_SUITE
